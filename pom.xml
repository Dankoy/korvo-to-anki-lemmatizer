<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.5</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>ru.dankoy</groupId>
  <artifactId>korvo-to-anki-lemmatizer</artifactId>
  <version>0.2.2</version>
  <name>korvo-to-anki-lemmatizer</name>
  <description>korvo-to-anki-lemmatizer</description>
  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>BSD-3-Clause</name>
      <url>https://spdx.org/licenses/BSD-3-Clause.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>Dankoy</id>
      <name>Dankoy</name>
      <email>-</email>
      <url>https://github.com/Dankoy</url>
      <roles>
        <role>maintainer</role>
        <role>developer</role>
      </roles>
      <timezone>Europe/Moscow</timezone>
    </developer>
  </developers>

  <properties>
    <java.version>21</java.version>
    <encoding>UTF-8</encoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <minimal.maven.version>3.3.9</minimal.maven.version>
    <spring-boot.version>3.5.5</spring-boot.version>
    <spring-shell.version>3.4.1</spring-shell.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <spotless.version>4.0.0</spotless.version>
    <spotless-plugin.version>2.46.1</spotless-plugin.version>
    <google-java-format.version>1.26.0</google-java-format.version>
    <stanford-corenlp.version>4.5.10</stanford-corenlp.version>
  </properties>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.shell</groupId>
        <artifactId>spring-shell-dependencies</artifactId>
        <version>${spring-shell.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <release>${java.version}</release>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${lombok-mapstruct-binding.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless-plugin.version}</version>
        <configuration>
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>.gitattributes</include>
                <include>.gitignore</include>
              </includes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace/>
              <endWithNewline/>
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
            </format>
          </formats>
          <!-- define a language-specific format -->
          <java>
            <!-- no need to specify files, inferred automatically, but you can if you want -->

            <cleanthat>
              <version>2.22</version>                          <!-- optional version of Cleanthat -->
              <sourceJdk>${maven.compiler.source}</sourceJdk> <!-- optional. Default to ${maven.compiler.source} else '1.7' -->
              <mutators>
                <mutator>SafeAndConsensual</mutator>          <!-- optional. Default to 'SafeAndConsensual' to include all mutators -->
                <mutator>SonarMutators</mutator>
                <mutator>SpotBugsMutators</mutator>
              </mutators>
              <!-- <mutators>            List of mutators: https://github.com/solven-eu/cleanthat/blob/master/MUTATORS.generated.MD -->
                <!-- <mutator>LiteralsFirstInComparisons</mutator> You may alternatively list the requested mutators -->
              <!-- </mutators> -->
               <excludedMutators>
                <excludedMutator>AvoidInlineConditionals</excludedMutator> <!-- You can discard specific rules -->
              </excludedMutators> 
              <includeDraft>false</includeDraft>              <!-- optional. Default to false, not to include draft mutators from Composite mutators -->
            </cleanthat>

<!--            <prettier />         &lt;!&ndash; has its own section below &ndash;&gt;-->


            <!-- apply a specific flavor of google-java-format and reflow long strings -->
            <googleJavaFormat>
              <version>${google-java-format.version}</version>
              <style>GOOGLE</style>
              <reflowLongStrings>true</reflowLongStrings>
              <formatJavadoc>false</formatJavadoc>
            </googleJavaFormat>
            <excludes>
              <exclude>target/**</exclude>
            </excludes>

            <removeUnusedImports>
              <engine>google-java-format</engine>
            </removeUnusedImports> <!-- self-explanatory -->

            <formatAnnotations />  <!-- fixes formatting of type annotations, see below -->

          </java>
          <sql>
            <!-- You have to set the target manually -->
            <includes>
              <include>src/main/resources/**/*.sql</include>
              <include>src/test/resources/**/*.sql</include>
            </includes>

            <dbeaver/>  <!-- has its own section below -->
          </sql>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <dependencies>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.shell</groupId>
      <artifactId>spring-shell-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>3.50.3.0</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>${stanford-corenlp.version}</version>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>${stanford-corenlp.version}</version>
      <classifier>models</classifier>
    </dependency>

    <!--    spotless-->
    <dependency>
      <groupId>com.diffplug.spotless</groupId>
      <artifactId>spotless-lib</artifactId>
      <version>${spotless.version}</version>
    </dependency>
    <dependency>
      <groupId>com.diffplug.spotless</groupId>
      <artifactId>spotless-maven-plugin</artifactId>
      <version>${spotless-plugin.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok-mapstruct-binding</artifactId>
      <version>${lombok-mapstruct-binding.version}</version>
    </dependency>

  </dependencies>


</project>
